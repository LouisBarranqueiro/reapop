// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<NotificationsSystem/> should render 1 notification containers (mobile) 1`] = `
"<div className=\\"notifications-system\\">
  <NotificationsContainer position=\\"t\\" theme={{ smallScreenMin: 768, notificationsSystem: { className: 'notifications-system' }, notificationsContainer: { className: { main: 'notifications-container', position: [Function: position] }, transition: { enterTimeout: 500, leaveTimeout: 900, name: { enter: 'notification-wrapper-enter', leave: 'notification-wrapper-leave' } } }, notification: { className: { main: 'notification', wrapper: 'notification-wrapper', meta: 'notification-meta', title: 'notification-title', message: 'notification-message', icon: 'fa notification-icon', imageContainer: 'notification-image-container', image: 'notification-image', status: [Function: status], dismissible: 'notification--dismissible', buttons: [Function: buttons], closeButtonContainer: 'notification-close-button-container', closeButton: 'fa notification-close-button', button: 'notification-button', buttonText: 'notification-button-text' } } }} notifications={[]} />
</div>"
`;

exports[`<NotificationsSystem/> should render 8 notification containers (desktop) 1`] = `
"<div className=\\"notifications-system\\">
  <NotificationsContainer position=\\"t\\" theme={{ smallScreenMin: 768, notificationsSystem: { className: 'notifications-system' }, notificationsContainer: { className: { main: 'notifications-container', position: [Function: position] }, transition: { enterTimeout: 500, leaveTimeout: 900, name: { enter: 'notification-wrapper-enter', leave: 'notification-wrapper-leave' } } }, notification: { className: { main: 'notification', wrapper: 'notification-wrapper', meta: 'notification-meta', title: 'notification-title', message: 'notification-message', icon: 'fa notification-icon', imageContainer: 'notification-image-container', image: 'notification-image', status: [Function: status], dismissible: 'notification--dismissible', buttons: [Function: buttons], closeButtonContainer: 'notification-close-button-container', closeButton: 'fa notification-close-button', button: 'notification-button', buttonText: 'notification-button-text' } } }} notifications={[]} />
  <NotificationsContainer position=\\"tc\\" theme={{ smallScreenMin: 768, notificationsSystem: { className: 'notifications-system' }, notificationsContainer: { className: { main: 'notifications-container', position: [Function: position] }, transition: { enterTimeout: 500, leaveTimeout: 900, name: { enter: 'notification-wrapper-enter', leave: 'notification-wrapper-leave' } } }, notification: { className: { main: 'notification', wrapper: 'notification-wrapper', meta: 'notification-meta', title: 'notification-title', message: 'notification-message', icon: 'fa notification-icon', imageContainer: 'notification-image-container', image: 'notification-image', status: [Function: status], dismissible: 'notification--dismissible', buttons: [Function: buttons], closeButtonContainer: 'notification-close-button-container', closeButton: 'fa notification-close-button', button: 'notification-button', buttonText: 'notification-button-text' } } }} notifications={[]} />
  <NotificationsContainer position=\\"tl\\" theme={{ smallScreenMin: 768, notificationsSystem: { className: 'notifications-system' }, notificationsContainer: { className: { main: 'notifications-container', position: [Function: position] }, transition: { enterTimeout: 500, leaveTimeout: 900, name: { enter: 'notification-wrapper-enter', leave: 'notification-wrapper-leave' } } }, notification: { className: { main: 'notification', wrapper: 'notification-wrapper', meta: 'notification-meta', title: 'notification-title', message: 'notification-message', icon: 'fa notification-icon', imageContainer: 'notification-image-container', image: 'notification-image', status: [Function: status], dismissible: 'notification--dismissible', buttons: [Function: buttons], closeButtonContainer: 'notification-close-button-container', closeButton: 'fa notification-close-button', button: 'notification-button', buttonText: 'notification-button-text' } } }} notifications={[]} />
  <NotificationsContainer position=\\"tr\\" theme={{ smallScreenMin: 768, notificationsSystem: { className: 'notifications-system' }, notificationsContainer: { className: { main: 'notifications-container', position: [Function: position] }, transition: { enterTimeout: 500, leaveTimeout: 900, name: { enter: 'notification-wrapper-enter', leave: 'notification-wrapper-leave' } } }, notification: { className: { main: 'notification', wrapper: 'notification-wrapper', meta: 'notification-meta', title: 'notification-title', message: 'notification-message', icon: 'fa notification-icon', imageContainer: 'notification-image-container', image: 'notification-image', status: [Function: status], dismissible: 'notification--dismissible', buttons: [Function: buttons], closeButtonContainer: 'notification-close-button-container', closeButton: 'fa notification-close-button', button: 'notification-button', buttonText: 'notification-button-text' } } }} notifications={[]} />
  <NotificationsContainer position=\\"b\\" theme={{ smallScreenMin: 768, notificationsSystem: { className: 'notifications-system' }, notificationsContainer: { className: { main: 'notifications-container', position: [Function: position] }, transition: { enterTimeout: 500, leaveTimeout: 900, name: { enter: 'notification-wrapper-enter', leave: 'notification-wrapper-leave' } } }, notification: { className: { main: 'notification', wrapper: 'notification-wrapper', meta: 'notification-meta', title: 'notification-title', message: 'notification-message', icon: 'fa notification-icon', imageContainer: 'notification-image-container', image: 'notification-image', status: [Function: status], dismissible: 'notification--dismissible', buttons: [Function: buttons], closeButtonContainer: 'notification-close-button-container', closeButton: 'fa notification-close-button', button: 'notification-button', buttonText: 'notification-button-text' } } }} notifications={[]} />
  <NotificationsContainer position=\\"bc\\" theme={{ smallScreenMin: 768, notificationsSystem: { className: 'notifications-system' }, notificationsContainer: { className: { main: 'notifications-container', position: [Function: position] }, transition: { enterTimeout: 500, leaveTimeout: 900, name: { enter: 'notification-wrapper-enter', leave: 'notification-wrapper-leave' } } }, notification: { className: { main: 'notification', wrapper: 'notification-wrapper', meta: 'notification-meta', title: 'notification-title', message: 'notification-message', icon: 'fa notification-icon', imageContainer: 'notification-image-container', image: 'notification-image', status: [Function: status], dismissible: 'notification--dismissible', buttons: [Function: buttons], closeButtonContainer: 'notification-close-button-container', closeButton: 'fa notification-close-button', button: 'notification-button', buttonText: 'notification-button-text' } } }} notifications={[]} />
  <NotificationsContainer position=\\"bl\\" theme={{ smallScreenMin: 768, notificationsSystem: { className: 'notifications-system' }, notificationsContainer: { className: { main: 'notifications-container', position: [Function: position] }, transition: { enterTimeout: 500, leaveTimeout: 900, name: { enter: 'notification-wrapper-enter', leave: 'notification-wrapper-leave' } } }, notification: { className: { main: 'notification', wrapper: 'notification-wrapper', meta: 'notification-meta', title: 'notification-title', message: 'notification-message', icon: 'fa notification-icon', imageContainer: 'notification-image-container', image: 'notification-image', status: [Function: status], dismissible: 'notification--dismissible', buttons: [Function: buttons], closeButtonContainer: 'notification-close-button-container', closeButton: 'fa notification-close-button', button: 'notification-button', buttonText: 'notification-button-text' } } }} notifications={[]} />
  <NotificationsContainer position=\\"br\\" theme={{ smallScreenMin: 768, notificationsSystem: { className: 'notifications-system' }, notificationsContainer: { className: { main: 'notifications-container', position: [Function: position] }, transition: { enterTimeout: 500, leaveTimeout: 900, name: { enter: 'notification-wrapper-enter', leave: 'notification-wrapper-leave' } } }, notification: { className: { main: 'notification', wrapper: 'notification-wrapper', meta: 'notification-meta', title: 'notification-title', message: 'notification-message', icon: 'fa notification-icon', imageContainer: 'notification-image-container', image: 'notification-image', status: [Function: status], dismissible: 'notification--dismissible', buttons: [Function: buttons], closeButtonContainer: 'notification-close-button-container', closeButton: 'fa notification-close-button', button: 'notification-button', buttonText: 'notification-button-text' } } }} notifications={[]} />
</div>"
`;
